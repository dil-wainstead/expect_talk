#!/usr/bin/env expect

# Usage:
# ./allpods.exp `kubectl -n rizzo get pods | grep Running | cut -d ' ' -f 1 | xargs`

# custom log messages
proc logger { msg } {
	puts "===> $msg"
}

# When a process has exited, we remove its process ID from the list of
# process IDs
proc remove_spid { spid } {
    global spawn_ids
    logger "removing $spid from spawn_ids"
    set index [lsearch $spawn_ids $spid]
    set spawn_ids [lreplace $spawn_ids $index $index]
    if { [llength $spawn_ids] == 0 } {
        logger "All work done. Exiting."
        exit
    } else {
        logger "still got [llength $spawn_ids] left to do"
    }
}


set spawn_ids "" ;# keep a list of the process IDs of our spawned processes
set counter 0    ;# for limiting how many we connect to

foreach pod $argv {
	logger "I'll log into $pod!"
	spawn kubectl -n rizzo exec -ti $pod -- /bin/sh
	lappend spawn_ids $spawn_id
	logger "$spawn_id for $pod"
	incr counter 1
	if { $counter > 20 } { break }
}

foreach spid $spawn_ids {
#	logger "sending uptime command..."
#	send -i $spid "uptime\r"
	logger "sending uname command..."
	send -i $spid "uname -a\r"

	logger "quitting $spid..."
	send -i $spid "exit\r"
}

expect {
	-i spawn_ids
	eof {
		logger "saw the end of spid $expect_out(spawn_id)"
		remove_spid $expect_out(spawn_id)
		exp_continue
	}
	timeout {
		logger "error: timed out!"
		exit
	}
}
